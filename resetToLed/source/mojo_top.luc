
// module declaration

module mojo_top ( 
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs

    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy       // AVR RX buffer full
  ) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
  
  // circuit resemble this block
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    led = c{7h00, rst};     // connect rst to the first LED
    
    //led = c{rst,rst,rst,rst,rst,rst,rst,rst};
    //led = 8x{rst};

    //"index" refers to the bit number. There's 8 bits for 8 LEDs here.
    //led[7:1] = 7h0;         // turn these LEDs off
    //led[7-:7] = 7b0; // select 7 bits starting from 7 and going down
    //led[1+:7] = 7b0; // select 7 bits starting from 1
    //led[0] = rst;           // connect rst to led[0]

    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
  }
  
}