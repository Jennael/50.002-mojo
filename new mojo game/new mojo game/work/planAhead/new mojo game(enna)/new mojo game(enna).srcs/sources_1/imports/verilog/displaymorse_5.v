/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module displaymorse_5 (
    input [4:0] data,
    input [0:0] play,
    input clk,
    input rst,
    input [25:0] incr,
    output reg red_led,
    output reg [4:0] ra,
    output reg [1:0] enter_led
  );
  
  
  
  reg [31:0] M_tmr_d, M_tmr_q = 1'h0;
  reg [4:0] M_read_d, M_read_q = 1'h0;
  localparam IDLE_state = 1'd0;
  localparam PLAY_state = 1'd1;
  
  reg M_state_d, M_state_q = IDLE_state;
  
  always @* begin
    M_state_d = M_state_q;
    M_tmr_d = M_tmr_q;
    M_read_d = M_read_q;
    
    ra = M_read_q;
    red_led = 1'h0;
    enter_led = 2'h3;
    
    case (M_state_q)
      IDLE_state: begin
        red_led = 1'h0;
        enter_led[0+0-:1] = 1'h0;
        M_read_d = 1'h0;
        if (play == 1'h1) begin
          M_state_d = PLAY_state;
        end
      end
      PLAY_state: begin
        M_tmr_d = M_tmr_q + incr;
        if (play == 1'h0) begin
          M_state_d = IDLE_state;
        end
        
        case (data)
          5'h00: begin
            enter_led[1+0-:1] = 1'h0;
            
            case (M_tmr_q[26+3-:4])
              4'h0: begin
                red_led = 1'h1;
              end
              4'h1: begin
                red_led = 1'h0;
              end
              4'h2: begin
                red_led = 1'h1;
              end
              4'h5: begin
                red_led = 1'h0;
              end
              4'ha: begin
                M_read_d = M_read_q + incr;
                M_tmr_d = 1'h0;
              end
              default: begin
                red_led = 1'h0;
              end
            endcase
          end
        endcase
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_tmr_q <= 1'h0;
      M_read_q <= 1'h0;
      M_state_q <= 1'h0;
    end else begin
      M_tmr_q <= M_tmr_d;
      M_read_q <= M_read_d;
      M_state_q <= M_state_d;
    end
  end
  
endmodule
